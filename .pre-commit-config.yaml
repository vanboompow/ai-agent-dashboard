repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python-specific hooks
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        files: ^server/
        language_version: python3.11

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: ^server/
        args: ["--profile", "black", "--filter-files"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        files: ^server/
        args: [
          "--max-line-length=88",
          "--extend-ignore=E203,W503,E501"
        ]
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-bugbear

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: ^server/
        args: [--ignore-missing-imports, --strict]
        additional_dependencies:
          - types-requests
          - types-redis
          - types-python-dateutil

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: ^server/
        args: ["-c", "server/.bandit"]
        exclude: ^server/tests/

  # JavaScript/TypeScript hooks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: ^client/.*\.[jt]sx?$
        args: [--fix]
        additional_dependencies:
          - eslint@^8.55.0
          - "@typescript-eslint/eslint-plugin@^6.14.0"
          - "@typescript-eslint/parser@^6.14.0"
          - eslint-plugin-react-hooks@^4.6.0
          - eslint-plugin-react-refresh@^0.4.5

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^client/.*\.(js|jsx|ts|tsx|json|css|md|html)$
        args: [--write]

  # Docker hooks
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: ^.*Dockerfile.*$
        args: [--config, .hadolint.yaml]

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # Commit message formatting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [
          optional-scope,
          feat,
          fix,
          docs,
          style,
          refactor,
          perf,
          test,
          build,
          ci,
          chore,
          revert
        ]

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: bash -c 'cd server && python -m pytest tests/ -x -v'
        language: system
        types: [python]
        files: ^server/
        pass_filenames: false
        always_run: false
        stages: [push]

      - id: typescript-check
        name: TypeScript type check
        entry: bash -c 'cd client && npm run type-check'
        language: system
        files: ^client/.*\.(ts|tsx)$
        pass_filenames: false

      - id: frontend-tests
        name: Frontend tests
        entry: bash -c 'cd client && npm run test run --passWithNoTests'
        language: system
        files: ^client/
        pass_filenames: false
        always_run: false
        stages: [push]

      - id: check-package-json
        name: Check package.json format
        entry: bash -c 'cd client && npm run lint:package'
        language: system
        files: ^client/package\.json$
        pass_filenames: false

      - id: check-requirements-txt
        name: Check requirements.txt security
        entry: bash -c 'cd server && safety check -r requirements.txt'
        language: system
        files: ^server/requirements\.txt$
        pass_filenames: false

      - id: alembic-check
        name: Check Alembic migrations
        entry: bash -c 'cd server && alembic check'
        language: system
        files: ^server/alembic/
        pass_filenames: false

# Global configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [
    pytest,
    frontend-tests,
    typescript-check,
    check-package-json,
    check-requirements-txt,
    alembic-check
  ]
  submodules: false